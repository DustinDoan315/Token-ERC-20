/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Dustin,
  DustinInterface,
} from "../../../contracts/Julia.sol/Dustin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052620000126012600a62000374565b620000209061c35062000389565b6006553480156200003057600080fd5b506040518060400160405280600b81526020016a253ab634b0902a37b5b2b760a91b8152506040518060400160405280600381526020016212931560ea1b815250816003908162000082919062000449565b50600462000091828262000449565b505050620000ae620000a8620000c860201b60201c565b620000cc565b620000c2336006546200011e60201b60201c565b6200052b565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200017a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b6200018860008383620001f3565b80600260008282546200019c919062000515565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6006548190816200020360025490565b6200020f919062000515565b1115620002545760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b604482015260640162000171565b50505050565b505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002b65781600019048211156200029a576200029a6200025f565b80851615620002a857918102915b93841c93908002906200027a565b509250929050565b600082620002cf575060016200036e565b81620002de575060006200036e565b8160018114620002f75760028114620003025762000322565b60019150506200036e565b60ff8411156200031657620003166200025f565b50506001821b6200036e565b5060208310610133831016604e8410600b841016171562000347575081810a6200036e565b62000353838362000275565b80600019048211156200036a576200036a6200025f565b0290505b92915050565b6000620003828383620002be565b9392505050565b80820281158282048414176200036e576200036e6200025f565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620003ce57607f821691505b602082108103620003ef57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025a576000816000526020600020601f850160051c81016020861015620004205750805b601f850160051c820191505b8181101562000441578281556001016200042c565b505050505050565b81516001600160401b03811115620004655762000465620003a3565b6200047d81620004768454620003b9565b84620003f5565b602080601f831160018114620004b557600084156200049c5750858301515b600019600386901b1c1916600185901b17855562000441565b600085815260208120601f198616915b82811015620004e657888601518255948401946001909101908401620004c5565b5085821015620005055787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200036e576200036e6200025f565b610dbd806200053b6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d714610232578063a9059cbb14610245578063dd62ed3e14610258578063f2fde38b1461026b578063f8b2cb4f1461027e57600080fd5b8063715018a6146101f457806379cc6790146101fc5780638da5cb5b1461020f57806395d89b411461022a57600080fd5b8063313ce567116100e9578063313ce56714610181578063395093511461019057806340c10f19146101a357806342966c68146101b857806370a08231146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b610123610291565b6040516101309190610bed565b60405180910390f35b61014c610147366004610c58565b610323565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610c82565b61033d565b60405160128152602001610130565b61014c61019e366004610c58565b610361565b6101b66101b1366004610c58565b610383565b005b6101b66101c6366004610cbe565b6103fa565b6101606101d9366004610cd7565b6001600160a01b031660009081526020819052604090205490565b6101b6610407565b6101b661020a366004610c58565b61041b565b6005546040516001600160a01b039091168152602001610130565b610123610434565b61014c610240366004610c58565b610443565b61014c610253366004610c58565b6104be565b610160610266366004610cf9565b6104cc565b6101b6610279366004610cd7565b6104f7565b61016061028c366004610cd7565b61056d565b6060600380546102a090610d2c565b80601f01602080910402602001604051908101604052809291908181526020018280546102cc90610d2c565b80156103195780601f106102ee57610100808354040283529160200191610319565b820191906000526020600020905b8154815290600101906020018083116102fc57829003601f168201915b5050505050905090565b60003361033181858561058b565b60019150505b92915050565b60003361034b8582856106af565b610356858585610729565b506001949350505050565b60003361033181858561037483836104cc565b61037e9190610d66565b61058b565b61038b6108d8565b806006548161039960025490565b6103a39190610d66565b11156103eb5760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b60448201526064015b60405180910390fd5b6103f58383610932565b505050565b61040433826109fd565b50565b61040f6108d8565b6104196000610b3b565b565b6104268233836106af565b61043082826109fd565b5050565b6060600480546102a090610d2c565b6000338161045182866104cc565b9050838110156104b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103e2565b610356828686840361058b565b600033610331818585610729565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104ff6108d8565b6001600160a01b0381166105645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e2565b61040481610b3b565b6001600160a01b038116600090815260208190526040812054610337565b6001600160a01b0383166105ed5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e2565b6001600160a01b03821661064e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106bb84846104cc565b9050600019811461072357818110156107165760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e2565b610723848484840361058b565b50505050565b6001600160a01b03831661078d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e2565b6001600160a01b0382166107ef5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e2565b6107fa838383610b8d565b6001600160a01b038316600090815260208190526040902054818110156108725760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e2565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610723565b6005546001600160a01b031633146104195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e2565b6001600160a01b0382166109885760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103e2565b61099460008383610b8d565b80600260008282546109a69190610d66565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610a5d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103e2565b610a6982600083610b8d565b6001600160a01b03821660009081526020819052604090205481811015610add5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103e2565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8060065481610b9b60025490565b610ba59190610d66565b1115610be85760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b60448201526064016103e2565b610723565b60006020808352835180602085015260005b81811015610c1b57858101830151858201604001528201610bff565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c5357600080fd5b919050565b60008060408385031215610c6b57600080fd5b610c7483610c3c565b946020939093013593505050565b600080600060608486031215610c9757600080fd5b610ca084610c3c565b9250610cae60208501610c3c565b9150604084013590509250925092565b600060208284031215610cd057600080fd5b5035919050565b600060208284031215610ce957600080fd5b610cf282610c3c565b9392505050565b60008060408385031215610d0c57600080fd5b610d1583610c3c565b9150610d2360208401610c3c565b90509250929050565b600181811c90821680610d4057607f821691505b602082108103610d6057634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561033757634e487b7160e01b600052601160045260246000fdfea2646970667358221220dfb61281e1bf347f5bbc5e1d9ea34ca9c39bc2a0672bb4bfc2dc839bc040f5a864736f6c63430008180033";

type DustinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DustinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dustin__factory extends ContractFactory {
  constructor(...args: DustinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Dustin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Dustin__factory {
    return super.connect(runner) as Dustin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DustinInterface {
    return new Interface(_abi) as DustinInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Dustin {
    return new Contract(address, _abi, runner) as unknown as Dustin;
  }
}
