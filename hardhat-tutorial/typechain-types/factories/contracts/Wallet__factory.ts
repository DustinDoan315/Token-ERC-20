/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Wallet, WalletInterface } from "../../contracts/Wallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_jltToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdtToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "jltTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_jltToken",
        type: "address",
      },
    ],
    name: "setJLTTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdtToken",
        type: "address",
      },
    ],
    name: "setUSDTAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setUniswapRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jltAmount",
        type: "uint256",
      },
    ],
    name: "swapJLTForUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
    ],
    name: "swapUSDTForJLT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdtAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a77380380610a7783398101604081905261002f916100e6565b6100383361007a565b600180546001600160a01b039485166001600160a01b031991821617909155600280549385169382169390931790925560038054919093169116179055610129565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e157600080fd5b919050565b6000806000606084860312156100fb57600080fd5b610104846100ca565b9250610112602085016100ca565b9150610120604085016100ca565b90509250925092565b61093f806101386000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637c157523116100715780637c157523146101205780638da5cb5b146101335780639ab4a44514610144578063a1e21e8b14610157578063bea9849e1461016a578063f2fde38b1461017d57600080fd5b806333558099146100ae57806355eba868146100dd57806371119ed2146100f2578063715018a614610105578063735de9f71461010d575b600080fd5b6002546100c1906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100f06100eb366004610728565b610190565b005b6100f0610100366004610758565b6101ba565b6100f06103f7565b6001546100c1906001600160a01b031681565b6100f061012e366004610728565b61040b565b6000546001600160a01b03166100c1565b6003546100c1906001600160a01b031681565b6100f0610165366004610758565b610435565b6100f0610178366004610728565b6105db565b6100f061018b366004610728565b610605565b61019861067e565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6002546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610202573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102269190610771565b10156102795760405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e74204a4c542062616c616e6365000000000000000060448201526064015b60405180910390fd5b60025460015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af11580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f2919061078a565b50604080516002808252606082018352600092602083019080368337505060025482519293506001600160a01b031691839150600090610334576103346107c2565b6001600160a01b039283166020918202929092010152600354825191169082906001908110610365576103656107c2565b6001600160a01b0392831660209182029290920101526001546040516338ed173960e01b81529116906338ed1739906103ab9085906000908690339042906004016107d8565b6000604051808303816000875af11580156103ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103f2919081019061084b565b505050565b6103ff61067e565b61040960006106d8565b565b61041361067e565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190610771565b10156104ef5760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420555344542062616c616e6365000000000000006044820152606401610270565b60035460015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af1158015610544573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610568919061078a565b50604080516002808252606082018352600092602083019080368337505060035482519293506001600160a01b0316918391506000906105aa576105aa6107c2565b6001600160a01b039283166020918202929092010152600254825191169082906001908110610365576103656107c2565b6105e361067e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61060d61067e565b6001600160a01b0381166106725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610270565b61067b816106d8565b50565b6000546001600160a01b031633146104095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610270565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561073a57600080fd5b81356001600160a01b038116811461075157600080fd5b9392505050565b60006020828403121561076a57600080fd5b5035919050565b60006020828403121561078357600080fd5b5051919050565b60006020828403121561079c57600080fd5b8151801515811461075157600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b8181101561082a5784516001600160a01b031683529383019391830191600101610805565b50506001600160a01b03969096166060850152505050608001529392505050565b6000602080838503121561085e57600080fd5b825167ffffffffffffffff8082111561087657600080fd5b818501915085601f83011261088a57600080fd5b81518181111561089c5761089c6107ac565b8060051b604051601f19603f830116810181811085821117156108c1576108c16107ac565b6040529182528482019250838101850191888311156108df57600080fd5b938501935b828510156108fd578451845293850193928501926108e4565b9897505050505050505056fea26469706673582212202658de894a41e935b57d0b6033e834499d9616826e583df945d94cc8dc09cc1564736f6c63430008180033";

type WalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wallet__factory extends ContractFactory {
  constructor(...args: WalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _router: AddressLike,
    _jltToken: AddressLike,
    _usdtToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _router,
      _jltToken,
      _usdtToken,
      overrides || {}
    );
  }
  override deploy(
    _router: AddressLike,
    _jltToken: AddressLike,
    _usdtToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _router,
      _jltToken,
      _usdtToken,
      overrides || {}
    ) as Promise<
      Wallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Wallet__factory {
    return super.connect(runner) as Wallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletInterface {
    return new Interface(_abi) as WalletInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Wallet {
    return new Contract(address, _abi, runner) as unknown as Wallet;
  }
}
