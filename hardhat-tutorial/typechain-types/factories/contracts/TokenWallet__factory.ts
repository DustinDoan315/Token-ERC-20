/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenWallet,
  TokenWalletInterface,
} from "../../contracts/TokenWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_USDT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "USDT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "myToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapETHToToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "swapTokenToETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "swapTokenToUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200111a3803806200111a8339810160408190526200003491620001fb565b6200003f336200018e565b6001600160a01b0383166200009b5760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e2061646472657373000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038216620000f35760405162461bcd60e51b815260206004820152601460248201527f496e76616c696420555344542061646472657373000000000000000000000000604482015260640162000092565b6001600160a01b0381166200014b5760405162461bcd60e51b815260206004820152601660248201527f496e76616c696420726f75746572206164647265737300000000000000000000604482015260640162000092565b600280546001600160a01b039485166001600160a01b03199182161790915560038054938516938216939093179092556001805491909316911617905562000245565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620001f657600080fd5b919050565b6000806000606084860312156200021157600080fd5b6200021c84620001de565b92506200022c60208501620001de565b91506200023c60408501620001de565b90509250925092565b610ec580620002556000396000f3fe6080604052600436106100a75760003560e01c8063b5d62d4d11610064578063b5d62d4d14610179578063b8fcf93714610181578063c54e44eb146101a1578063f14210a6146101c1578063f2fde38b146101e1578063f61a24271461020157600080fd5b806306b091f9146100ac5780630ea21fa4146100ce5780636f9fb98a146100ee578063715018a61461010e578063735de9f7146101235780638da5cb5b1461015b575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004610beb565b610221565b005b3480156100da57600080fd5b506100cc6100e9366004610c17565b6103aa565b3480156100fa57600080fd5b506040514781526020015b60405180910390f35b34801561011a57600080fd5b506100cc61065b565b34801561012f57600080fd5b50600154610143906001600160a01b031681565b6040516001600160a01b039091168152602001610105565b34801561016757600080fd5b506000546001600160a01b0316610143565b6100cc61066f565b34801561018d57600080fd5b50600254610143906001600160a01b031681565b3480156101ad57600080fd5b50600354610143906001600160a01b031681565b3480156101cd57600080fd5b506100cc6101dc366004610c17565b61082c565b3480156101ed57600080fd5b506100cc6101fc366004610c30565b6108a8565b34801561020d57600080fd5b506100cc61021c366004610c17565b610921565b610229610b2c565b6001600160a01b03821661027c5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b60448201526064015b60405180910390fd5b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa1580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e69190610c54565b10156103345760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e63650000000000006044820152606401610273565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a59190610c6d565b505050565b600081116103ca5760405162461bcd60e51b815260040161027390610c8f565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104459190610c6d565b6104835760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610273565b60025460015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af11580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc9190610c6d565b50604080516002808252606082018352600092602083019080368337505060025482519293506001600160a01b03169183915060009061053e5761053e610ce8565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb9190610cfe565b816001815181106105ce576105ce610ce8565b6001600160a01b0392831660209182029290920101526001546040516318cbafe560e01b81529116906318cbafe590610614908590600090869033904290600401610d60565b6000604051808303816000875af1158015610633573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103a59190810190610d9c565b610663610b2c565b61066d6000610b86565b565b600034116106c95760405162461bcd60e51b815260206004820152602160248201527f45544820616d6f756e74206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608401610273565b6040805160028082526060820183526000926020830190803683375050600154604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015610733573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107579190610cfe565b8160008151811061076a5761076a610ce8565b6001600160a01b03928316602091820292909201015260025482519116908290600190811061079b5761079b610ce8565b6001600160a01b039283166020918202929092010152600154604051637ff36ab560e01b8152911690637ff36ab59034906107e190600090869033904290600401610e5a565b60006040518083038185885af11580156107ff573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526108289190810190610d9c565b5050565b610834610b2c565b4781111561087b5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610273565b604051339082156108fc029083906000818181858888f19350505050158015610828573d6000803e3d6000fd5b6108b0610b2c565b6001600160a01b0381166109155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610273565b61091e81610b86565b50565b600081116109415760405162461bcd60e51b815260040161027390610c8f565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc9190610c6d565b6109fa5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610273565b60025460015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af1158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a739190610c6d565b50604080516002808252606082018352600092602083019080368337505060025482519293506001600160a01b031691839150600090610ab557610ab5610ce8565b6001600160a01b039283166020918202929092010152600354825191169082906001908110610ae657610ae6610ce8565b6001600160a01b0392831660209182029290920101526001546040516338ed173960e01b81529116906338ed173990610614908590600090869033904290600401610d60565b6000546001600160a01b0316331461066d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610273565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461091e57600080fd5b60008060408385031215610bfe57600080fd5b8235610c0981610bd6565b946020939093013593505050565b600060208284031215610c2957600080fd5b5035919050565b600060208284031215610c4257600080fd5b8135610c4d81610bd6565b9392505050565b600060208284031215610c6657600080fd5b5051919050565b600060208284031215610c7f57600080fd5b81518015158114610c4d57600080fd5b60208082526023908201527f546f6b656e20616d6f756e74206d75737420626520677265617465722074686160408201526206e20360ec1b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d1057600080fd5b8151610c4d81610bd6565b60008151808452602080850194506020840160005b83811015610d555781516001600160a01b031687529582019590820190600101610d30565b509495945050505050565b85815284602082015260a060408201526000610d7f60a0830186610d1b565b6001600160a01b0394909416606083015250608001529392505050565b60006020808385031215610daf57600080fd5b825167ffffffffffffffff80821115610dc757600080fd5b818501915085601f830112610ddb57600080fd5b815181811115610ded57610ded610cd2565b8060051b604051601f19603f83011681018181108582111715610e1257610e12610cd2565b604052918252848201925083810185019188831115610e3057600080fd5b938501935b82851015610e4e57845184529385019392850192610e35565b98975050505050505050565b848152608060208201526000610e736080830186610d1b565b6001600160a01b0394909416604083015250606001529291505056fea2646970667358221220e03cd49205ee77888b089a2334998fb226100f1179bfc677abe4e838f333cf0a64736f6c63430008180033";

type TokenWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenWallet__factory extends ContractFactory {
  constructor(...args: TokenWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _USDT: AddressLike,
    _router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, _USDT, _router, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    _USDT: AddressLike,
    _router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, _USDT, _router, overrides || {}) as Promise<
      TokenWallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenWallet__factory {
    return super.connect(runner) as TokenWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenWalletInterface {
    return new Interface(_abi) as TokenWalletInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TokenWallet {
    return new Contract(address, _abi, runner) as unknown as TokenWallet;
  }
}
