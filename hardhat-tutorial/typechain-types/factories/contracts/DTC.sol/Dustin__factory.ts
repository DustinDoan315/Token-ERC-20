/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Dustin,
  DustinInterface,
} from "../../../contracts/DTC.sol/Dustin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526012600a62000014919062000634565b61c35062000023919062000685565b6006553480156200003357600080fd5b506040518060400160405280600681526020017f44757374696e00000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f44544300000000000000000000000000000000000000000000000000000000008152508160039081620000b1919062000940565b508060049081620000c3919062000940565b505050620000e6620000da6200011160201b60201c565b6200011960201b60201c565b620000fa33600654620001df60201b60201c565b6200010b336200034c60201b60201c565b62000c1d565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000251576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002489062000a88565b60405180910390fd5b6200026560008383620003e260201b60201c565b806002600082825462000279919062000aaa565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200032c919062000af6565b60405180910390a36200034860008383620003e760201b60201c565b5050565b6200035c620003ec60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620003ce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003c59062000b89565b60405180910390fd5b620003df816200011960201b60201c565b50565b505050565b505050565b620003fc6200011160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620004226200047d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200047b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004729062000bfb565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000535578086048111156200050d576200050c620004a7565b5b60018516156200051d5780820291505b80810290506200052d85620004d6565b9450620004ed565b94509492505050565b60008262000550576001905062000623565b8162000560576000905062000623565b81600181146200057957600281146200058457620005ba565b600191505062000623565b60ff841115620005995762000598620004a7565b5b8360020a915084821115620005b357620005b2620004a7565b5b5062000623565b5060208310610133831016604e8410600b8410161715620005f45782820a905083811115620005ee57620005ed620004a7565b5b62000623565b620006038484846001620004e3565b925090508184048111156200061d576200061c620004a7565b5b81810290505b9392505050565b6000819050919050565b600062000641826200062a565b91506200064e836200062a565b92506200067d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200053e565b905092915050565b600062000692826200062a565b91506200069f836200062a565b9250828202620006af816200062a565b91508282048414831517620006c957620006c8620004a7565b5b5092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200075257607f821691505b6020821081036200076857620007676200070a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007d27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000793565b620007de868362000793565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620008216200081b62000815846200062a565b620007f6565b6200062a565b9050919050565b6000819050919050565b6200083d8362000800565b620008556200084c8262000828565b848454620007a0565b825550505050565b600090565b6200086c6200085d565b6200087981848462000832565b505050565b5b81811015620008a1576200089560008262000862565b6001810190506200087f565b5050565b601f821115620008f057620008ba816200076e565b620008c58462000783565b81016020851015620008d5578190505b620008ed620008e48562000783565b8301826200087e565b50505b505050565b600082821c905092915050565b60006200091560001984600802620008f5565b1980831691505092915050565b600062000930838362000902565b9150826002028217905092915050565b6200094b82620006d0565b67ffffffffffffffff811115620009675762000966620006db565b5b62000973825462000739565b62000980828285620008a5565b600060209050601f831160018114620009b85760008415620009a3578287015190505b620009af858262000922565b86555062000a1f565b601f198416620009c8866200076e565b60005b82811015620009f257848901518255600182019150602085019450602081019050620009cb565b8683101562000a12578489015162000a0e601f89168262000902565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000a70601f8362000a27565b915062000a7d8262000a38565b602082019050919050565b6000602082019050818103600083015262000aa38162000a61565b9050919050565b600062000ab7826200062a565b915062000ac4836200062a565b925082820190508082111562000adf5762000ade620004a7565b5b92915050565b62000af0816200062a565b82525050565b600060208201905062000b0d600083018462000ae5565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600062000b7160268362000a27565b915062000b7e8262000b13565b604082019050919050565b6000602082019050818103600083015262000ba48162000b62565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600062000be360208362000a27565b915062000bf08262000bab565b602082019050919050565b6000602082019050818103600083015262000c168162000bd4565b9050919050565b611b318062000c2d6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d7146102e3578063a9059cbb14610313578063dd62ed3e14610343578063f2fde38b14610373578063f8b2cb4f1461038f57610116565b8063715018a61461028157806379cc67901461028b5780638da5cb5b146102a757806395d89b41146102c557610116565b8063313ce567116100e9578063313ce567146101b757806339509351146101d557806342966c68146102055780634847a79c1461022157806370a082311461025157610116565b806306fdde031461011b578063095ea7b31461013957806318160ddd1461016957806323b872dd14610187575b600080fd5b6101236103bf565b6040516101309190611129565b60405180910390f35b610153600480360381019061014e91906111e4565b610451565b604051610160919061123f565b60405180910390f35b610171610474565b60405161017e9190611269565b60405180910390f35b6101a1600480360381019061019c9190611284565b61047e565b6040516101ae919061123f565b60405180910390f35b6101bf6104ad565b6040516101cc91906112f3565b60405180910390f35b6101ef60048036038101906101ea91906111e4565b6104b6565b6040516101fc919061123f565b60405180910390f35b61021f600480360381019061021a919061130e565b6104ed565b005b61023b600480360381019061023691906111e4565b610501565b604051610248919061123f565b60405180910390f35b61026b6004803603810190610266919061133b565b6105bd565b6040516102789190611269565b60405180910390f35b610289610605565b005b6102a560048036038101906102a091906111e4565b610619565b005b6102af610639565b6040516102bc9190611377565b60405180910390f35b6102cd610663565b6040516102da9190611129565b60405180910390f35b6102fd60048036038101906102f891906111e4565b6106f5565b60405161030a919061123f565b60405180910390f35b61032d600480360381019061032891906111e4565b61076c565b60405161033a919061123f565b60405180910390f35b61035d60048036038101906103589190611392565b61078f565b60405161036a9190611269565b60405180910390f35b61038d6004803603810190610388919061133b565b610816565b005b6103a960048036038101906103a4919061133b565b610899565b6040516103b69190611269565b60405180910390f35b6060600380546103ce90611401565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa90611401565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b5050505050905090565b60008061045c6108ab565b90506104698185856108b3565b600191505092915050565b6000600254905090565b6000806104896108ab565b9050610496858285610a7c565b6104a1858585610b08565b60019150509392505050565b60006012905090565b6000806104c16108ab565b90506104e28185856104d3858961078f565b6104dd9190611461565b6108b3565b600191505092915050565b6104fe6104f86108ab565b82610d7e565b50565b60008161050d336105bd565b101561054e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610545906114e1565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105ab9190611269565b60405180910390a36001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610f4b565b6106176000610fc9565b565b61062b826106256108ab565b83610a7c565b6106358282610d7e565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461067290611401565b80601f016020809104026020016040519081016040528092919081815260200182805461069e90611401565b80156106eb5780601f106106c0576101008083540402835291602001916106eb565b820191906000526020600020905b8154815290600101906020018083116106ce57829003601f168201915b5050505050905090565b6000806107006108ab565b9050600061070e828661078f565b905083811015610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a90611573565b60405180910390fd5b61076082868684036108b3565b60019250505092915050565b6000806107776108ab565b9050610784818585610b08565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61081e610f4b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088490611605565b60405180910390fd5b61089681610fc9565b50565b60006108a4826105bd565b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091990611697565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098890611729565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a6f9190611269565b60405180910390a3505050565b6000610a88848461078f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b025781811015610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb90611795565b60405180910390fd5b610b0184848484036108b3565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6e90611827565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610be6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdd906118b9565b60405180910390fd5b610bf183838361108f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6e9061194b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d659190611269565b60405180910390a3610d78848484611094565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ded576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de4906119dd565b60405180910390fd5b610df98260008361108f565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7690611a6f565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f329190611269565b60405180910390a3610f4683600084611094565b505050565b610f536108ab565b73ffffffffffffffffffffffffffffffffffffffff16610f71610639565b73ffffffffffffffffffffffffffffffffffffffff1614610fc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbe90611adb565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110d35780820151818401526020810190506110b8565b60008484015250505050565b6000601f19601f8301169050919050565b60006110fb82611099565b61110581856110a4565b93506111158185602086016110b5565b61111e816110df565b840191505092915050565b6000602082019050818103600083015261114381846110f0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061117b82611150565b9050919050565b61118b81611170565b811461119657600080fd5b50565b6000813590506111a881611182565b92915050565b6000819050919050565b6111c1816111ae565b81146111cc57600080fd5b50565b6000813590506111de816111b8565b92915050565b600080604083850312156111fb576111fa61114b565b5b600061120985828601611199565b925050602061121a858286016111cf565b9150509250929050565b60008115159050919050565b61123981611224565b82525050565b60006020820190506112546000830184611230565b92915050565b611263816111ae565b82525050565b600060208201905061127e600083018461125a565b92915050565b60008060006060848603121561129d5761129c61114b565b5b60006112ab86828701611199565b93505060206112bc86828701611199565b92505060406112cd868287016111cf565b9150509250925092565b600060ff82169050919050565b6112ed816112d7565b82525050565b600060208201905061130860008301846112e4565b92915050565b6000602082840312156113245761132361114b565b5b6000611332848285016111cf565b91505092915050565b6000602082840312156113515761135061114b565b5b600061135f84828501611199565b91505092915050565b61137181611170565b82525050565b600060208201905061138c6000830184611368565b92915050565b600080604083850312156113a9576113a861114b565b5b60006113b785828601611199565b92505060206113c885828601611199565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061141957607f821691505b60208210810361142c5761142b6113d2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061146c826111ae565b9150611477836111ae565b925082820190508082111561148f5761148e611432565b5b92915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006114cb6014836110a4565b91506114d682611495565b602082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061155d6025836110a4565b915061156882611501565b604082019050919050565b6000602082019050818103600083015261158c81611550565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115ef6026836110a4565b91506115fa82611593565b604082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006116816024836110a4565b915061168c82611625565b604082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006117136022836110a4565b915061171e826116b7565b604082019050919050565b6000602082019050818103600083015261174281611706565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061177f601d836110a4565b915061178a82611749565b602082019050919050565b600060208201905081810360008301526117ae81611772565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006118116025836110a4565b915061181c826117b5565b604082019050919050565b6000602082019050818103600083015261184081611804565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118a36023836110a4565b91506118ae82611847565b604082019050919050565b600060208201905081810360008301526118d281611896565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006119356026836110a4565b9150611940826118d9565b604082019050919050565b6000602082019050818103600083015261196481611928565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b60006119c76021836110a4565b91506119d28261196b565b604082019050919050565b600060208201905081810360008301526119f6816119ba565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a596022836110a4565b9150611a64826119fd565b604082019050919050565b60006020820190508181036000830152611a8881611a4c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611ac56020836110a4565b9150611ad082611a8f565b602082019050919050565b60006020820190508181036000830152611af481611ab8565b905091905056fea26469706673582212201220776afb246cb2e162a073d2004c5a293124c8e8b3e5f1d39d241267972dbe64736f6c63430008180033";

type DustinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DustinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dustin__factory extends ContractFactory {
  constructor(...args: DustinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Dustin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Dustin__factory {
    return super.connect(runner) as Dustin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DustinInterface {
    return new Interface(_abi) as DustinInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Dustin {
    return new Contract(address, _abi, runner) as unknown as Dustin;
  }
}
